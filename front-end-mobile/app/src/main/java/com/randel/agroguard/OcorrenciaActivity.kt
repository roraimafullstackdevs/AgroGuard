package com.randel.agroguard

import com.randel.agroguard.Viewmodel.OcorrenciaViewModel
import android.Manifest
import android.content.pm.PackageManager
import android.net.Uri
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.ImageView
import androidx.activity.viewModels
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import androidx.lifecycle.Observer
import com.randel.agroguard.Data.Model.Ocorrencia
import androidx.activity.result.ActivityResultLauncher
import androidx.activity.result.contract.ActivityResultContracts

class OcorrenciaActivity : AppCompatActivity() {
    private val ocorrenciaViewModel: OcorrenciaViewModel by viewModels()
    private lateinit var selectPhotoLauncher: ActivityResultLauncher<String>
    private var selectedPhotoUri: Uri? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_ocorrencia)

        // Initialize UI elements
        val hectaresEditText = findViewById<EditText>(R.id.editTextHectares)
        val hectaresAfetadosEditText = findViewById<EditText>(R.id.editTextHectaresAfetados)
        val culturaEditText = findViewById<EditText>(R.id.editTextCultura)
        val latitudeEditText = findViewById<EditText>(R.id.editTextLatitude)
        val longitudeEditText = findViewById<EditText>(R.id.editTextLongitude)
        val imageViewSelectedPhoto = findViewById<ImageView>(R.id.imageViewSelectedPhoto)
        val buttonSelectPhoto = findViewById<Button>(R.id.buttonSelectPhoto)
        val addButton = findViewById<Button>(R.id.buttonSubmitOcorrencia)

        // Set up the select photo launcher
        selectPhotoLauncher = registerForActivityResult(ActivityResultContracts.GetContent()) { uri: Uri? ->
            if (uri != null) {
                selectedPhotoUri = uri
                imageViewSelectedPhoto.setImageURI(uri)
            }
        }
        
        // Select photo button listener
        buttonSelectPhoto.setOnClickListener {
            checkPermissionAndSelectPhoto()
        }

        // Add Ocorrencia button listener
        addButton.setOnClickListener {
            val ocorrencia = Ocorrencia(
                id = 0,  // Auto-generated by the backend
                hectares = hectaresEditText.text.toString().toInt(),
                hectaresAfetados = hectaresAfetadosEditText.text.toString().toInt(),
                cultura = culturaEditText.text.toString(),
                latitude = latitudeEditText.text.toString().toFloat(),
                longitude = longitudeEditText.text.toString().toFloat(),
                fotoOcorrencia = selectedPhotoUri.toString()  // Convert Uri to String
            )
            ocorrenciaViewModel.addOcorrencia(ocorrencia)
        }
    }

    private fun checkPermissionAndSelectPhoto() {
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(
                this,
                arrayOf(Manifest.permission.READ_EXTERNAL_STORAGE),
                REQUEST_CODE_STORAGE_PERMISSION
            )
        } else {
            selectPhotoLauncher.launch("image/*")  // Only images
        }
    }

    override fun onRequestPermissionsResult(
        requestCode: Int,
        permissions: Array<out String>,
        grantResults: IntArray
    ) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
        if (requestCode == REQUEST_CODE_STORAGE_PERMISSION && grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
            selectPhotoLauncher.launch("image/*")
        }
    }

    companion object {
        private const val REQUEST_CODE_STORAGE_PERMISSION = 1
    }
}
